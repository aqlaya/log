Первое задание это динамическая библиотека файлы находятся в директории lib 
Второе задание это программа, файлы находятся в директории src
Собирается все с помощью Makefile, находящегося в корне

Реализация библиотеки для записи сообщений в текстовый файл. 
Чтобы использовать, надо подключить хедер ./lib/log.hpp
Бибилотека включает в себя два класса Log и Unit_log и один класс перечисления status. 
Перечисление status содержит статусы в порядке приоритета {NOTICE, WARNING, ERROR, CRITICAL}.
Log инициализирует процесс логирование в файл, который задается пользователем в конструкторе. 
Стоит понимать, что файл по указанному пути должен существовать до создания обьекта Log и 
создатель файла должен иметь права записывать в него, иначе из конструктора поступят ошибки, которые
ляжут на программиста, используюещего эту библиотеку.
Unit_log это класс содержащий одно сообшение сформулированное пользователем, здесь ошибки при указания 
статуса тоже ложатся на пользователя библиотеки, при неправильном указании статуса 
(NOTICE, WARNING, ERROR, CRITICAL) будет ошибка std::out_of_range.
Пример программы написан в файле ./lib/main.cc

Приложения собираются с помощью системы сборки make.
Пример:
    cd .
    make 
Собрать только динамическую библиотеку можно написав:
    make build_dyn_lib
Тажке изменить флаги сборки можно зайдя в ./Makefile и изменив перменную CFLAGS.

Запус Приложения
Пример:
    cd ./bin
    ./main.out WARNING /path_to_file/file.txt
Первый аргумент командной строки это статус по умолчанию, второй это файл логирования.
Указав неправильный файл или статус по умолчанию будет ошибка.
